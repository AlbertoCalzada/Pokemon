io.SlowWrite("\t"+(i+1)+". "+ listItem[i].GetName()+" x 1 " + "\n \t Coste: " + listItem[i].GetBuyPricePokedollars()+ " Pokedóllares.");
                    io.Space();

                    for (int i = 0; i < trainer.GetBag().GetItems()[numPocket].Length; ++i)
            {
                if (trainer.GetBag().GetItems()[numPocket][i] != null)
                {
                    if (trainer.GetBag().GetItems()[numPocket][i].UseItemInCombat() == true)
                    {
                        io.SlowWrite("¿Qué quieres hacer con los objetos?");
                        io.ColorYellow("\t 1. Usar.");
                        io.ColorBlue("\t 2. Salir.");
                        int pocketOption = 0;
                        pocketOption = io.OptionCorrect(1, 2, pocketOption);
                        switch (pocketOption)
                        {
                            case 1:
                                io.SlowWrite("Elija el item que desea USAR : ");
                                int chosenItem = 0;
                                int max = 0;
                                for (int j = 0; j < trainer.GetBag().GetItems()[numPocket].Length; ++j) //Para que me de opción a elegir unicamente entre los Items que tengo
                                {
                                    if (trainer.GetBag().GetItems()[numPocket][j] != null)
                                    {
                                        max = j + 1;
                                    }
                                }
                                chosenItem = io.OptionCorrect(1, max, chosenItem);
                                if (numPocket == 1) //Si es una pokeball se usará sobre el rival.
                                {
                                    trainer.GetBag().GetItems()[numPocket][chosenItem - 1].Utility(rivalPokemon);
                                    AddPokemon(randomenemy);
                                    break;
                                }
                                else
                                {
                                    ShowPokemonInfo();
                                    io.SlowWrite("Elija el Pokémon sobre el que desea usar el objeto: ");
                                    max = 0;
                                    for (int j = 0; j < packPokemon.Length; ++j) //Para que me de opción a elegir unicamente entre los Pokémon que tengo
                                    {
                                        if (packPokemon[j] != null)
                                        {
                                            max = j + 1;
                                        }
                                    }
                                    int chosenPokemon = 0;
                                    chosenPokemon = io.OptionCorrect(1, max, chosenPokemon);
                                    trainer.GetBag().GetItems()[numPocket][chosenItem - 1].Utility(packPokemon[chosenPokemon - 1]);
                                    io.SlowWrite("Has usado " + trainer.GetBag().GetItems()[numPocket][chosenItem - 1].GetName() + " en " + packPokemon[chosenPokemon - 1].GetNickName() + " con éxito. ");
                                    break;
                                }
                                
                            case 2:
                                io.SlowWrite("Has salido del Menu");
                                break;
                        }                    
                    }
                    else
                    {
                        io.SlowWrite("No puedes usar este tipo de objetos en combate.");
                        break;
                    }
                }
            }